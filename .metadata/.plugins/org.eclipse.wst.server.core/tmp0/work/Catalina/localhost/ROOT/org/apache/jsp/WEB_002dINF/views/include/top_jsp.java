/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-10-12 05:44:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class top_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 사용자 세션에서 아이디 찾아오기 // 필터를 먼저 거쳤기 때문에 있음 -->\r\n");

String id = (String) session.getAttribute("id");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- navbar -->\r\n");
      out.write("<nav class=\"nav-extended light-blue lighten-1\" role=\"navigation\">\r\n");
      out.write("	<div class=\"container right-align\"\r\n");
      out.write("		style=\"font-size: 13px; height: 40px;\">\r\n");
      out.write("\r\n");
      out.write("		");

		if (id == null) {
		
      out.write("\r\n");
      out.write("		<a href=\"/member/login\">로그인</a>&nbsp; | &nbsp; <a\r\n");
      out.write("			href=\"/member/join\">회원가입</a>\r\n");
      out.write("		");

		} else {
		
      out.write("\r\n");
      out.write("		<a href=\"/member/Logout\">로그아웃</a>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"nav-wrapper container\">\r\n");
      out.write("		<a id=\"logo-container\" href=\"/index\" class=\"brand-logo\"><i\r\n");
      out.write("			class=\"material-icons\">android</i>Logo</a>\r\n");
      out.write("\r\n");
      out.write("		<ul class=\"right hide-on-med-and-down\">\r\n");
      out.write("			");

			if (id != null) {
			
      out.write("\r\n");
      out.write("			<!-- 로그인상태일때 -->\r\n");
      out.write("			<li><a href=\"#!\" class=\"dropdown-trigger\"\r\n");
      out.write("				data-target=\"dropdownMember\">내정보(");
      out.print(id);
      out.write(")<i\r\n");
      out.write("					class=\"material-icons right\">arrow_drop_down</i></a></li>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("			<!-- 로그인 관계없이 보이는 메뉴 -->\r\n");
      out.write("			<li><a class=\"dropdown-trigger\" data-target=\"dropdownBoard\">게시판<i\r\n");
      out.write("					class=\"material-icons right\">arrow_drop_down</i></a></li>\r\n");
      out.write("			<li><a href=\"#!\" class=\"dropdown-trigger\"\r\n");
      out.write("				data-target=\"dropdownChat\">채팅<i class=\"material-icons right\">arrow_drop_down</i></a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- end of navbar -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- navbar dropdown structure -->\r\n");
      out.write("<ul id=\"dropdownMember\" class=\"dropdown-content\">\r\n");
      out.write("	<!-- 내정보 서브메뉴 -->\r\n");
      out.write("	<li><a href=\"/member/passwd\">비밀번호 변경</a></li>\r\n");
      out.write("	<li><a href=\"/member/modify\">내정보 수정</a></li>\r\n");
      out.write("	<li><a href=\"/member/remove\">회원탈퇴</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("<ul id=\"dropdownBoard\" class=\"dropdown-content\">\r\n");
      out.write("	<!-- 게시판 서브메뉴 -->\r\n");
      out.write("	<li><a href=\"/board/list\">게시판</a></li>\r\n");
      out.write("	<li><a href=\"\">자료실</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("<ul id=\"dropdownChat\" class=\"dropdown-content\">\r\n");
      out.write("	<!-- 채팅 서브메뉴 -->\r\n");
      out.write("	<li><a href=\"#test1\">간단한 채팅</a></li>\r\n");
      out.write("	<li><a href=\"\">채팅방 목록</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("<!-- end of navbar dropdown structure -->\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
